
@{
    ViewBag.Title = "TimeLine";
    Layout = "~/Areas/Study/Views/Program/Shared/_LayoutAnimeJs.cshtml";
}


<h2>动画播放控制</h2>


<div class="col-12">
    <h4 class="mt-4">PLAY / PAUSE（暂停/播放）</h4>
    <div class="code-div">
        <div id="playPause">
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line player"> <button class="play">Play</button><button class="pause">Pause</button> </div>
        </div>
    </div>

    <h4 class="mt-4">RESTART（重新开始播放）</h4>
    <div class="code-div">
        <div id="restartAnim">
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line player"> <button class="restart">Restart</button> </div>
        </div>
    </div>

    <h4 class="mt-4">REVERSE（反转播放）</h4>
    <div class="code-div">
        <div id="reverseAnim">
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line player"> <button class="reverse">Reverse</button> </div>
        </div>
    </div>

    <h4 class="mt-4">SEEK（瞬移）</h4>
    <div class="code-div">
        <div id="seekAnim">
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="small square shadow bg-thin-light-blue"></div>
                <div class="small square el bg-thin-light-blue"></div>
            </div>
            <div class="line player"> <input class="progress" step=".001" type="range" min="0" max="100" value="0"> </div>
        </div>
    </div>

    <h4 class="mt-4">时间轴控制</h4>
    <div class="code-div">
        <div id="TLcontrols">
            <div class="line">
                <div class="square shadow bg-thin-light-blue"></div>
                <div class="square el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="circle shadow bg-thin-light-blue"></div>
                <div class="circle el bg-thin-light-blue"></div>
            </div>
            <div class="line">
                <div class="triangle shadow text-thin-light-blue"></div>
                <div class="triangle el text-thin-light-blue"></div>
            </div>
            <div class="line player align-items"> <button class="play">Play</button> <button class="pause">Pause</button> <button class="restart">Restart</button> <input class="progress" step="2" type="range" min="0" max="100" value="0"> </div>
        </div>
    </div>
</div>

@section JsCode {
    @*PLAY / PAUSE（暂停/播放）*@
    <div class="js-code" data-id="playPause">
        // PLAY / PAUSE（暂停/播放）
        var playPause = anime({
            targets: '#playPause .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            direction: 'alternate',
            loop: true,
            autoplay: false
        });

        document.querySelector('#playPause .play').onclick = playPause.play;
        document.querySelector('#playPause .pause').onclick = playPause.pause;
        /*
        autoplay 自动播放
        
        默认 true
        类型 boolean
        */
    </div>

    @*RESTART（重新开始播放）*@
    <div class="js-code" data-id="restartAnim">
        // RESTART（重新开始播放）
        var restartAnim = anime({
            targets: '#restartAnim .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            direction: 'alternate',
            loop: true
        });

        document.querySelector('#restartAnim .restart').onclick = restartAnim.restart;
    </div>
    
    @*REVERSE（反转播放）*@
    <div class="js-code" data-id="reverseAnim">
        // REVERSE（反转播放）
        var reverseAnim = anime({
            targets: '#reverseAnim .el',
            translateX: 250,
            duration: 2000,
            delay: function (el, i, l) { return i * 200; }
        });

        document.querySelector('#reverseAnim .reverse').onclick = function () {
            reverseAnim.play();
            reverseAnim.reverse();
        }
    </div>

    @*SEEK（瞬移）*@
    <div class="js-code" data-id="seekAnim">
        // SEEK（瞬移）
        var seekAnim = anime({
            targets: '#seekAnim .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            elasticity: 200,
            autoplay: false
        });

        var seekProgressEl = document.querySelector('#seekAnim .progress');

        seekProgressEl.addEventListener('input', function () {
            seekAnim.seek(seekAnim.duration * (seekProgressEl.value / 100));
        });

        ['input', 'change'].forEach(function (evt) {
            seekProgressEl.addEventListener(evt, function () {
                seekAnim.seek(seekAnim.duration * (seekProgressEl.value / 100));
            });
        });
    </div>

    @*时间轴控制*@
    <div class="js-code" data-id="TLcontrols"> 
        // 时间轴控制
        var controlsProgressEl = document.querySelector('#TLcontrols .progress');

        var TLcontrols = anime.timeline({
            direction: 'alternate',
            loop: true,
            easing: 'linear',
            autoplay: false,
            update: function (anim) {
                controlsProgressEl.value = anim.progress;
            }
        });

        TLcontrols
          .add({
              targets: '#TLcontrols .square.el',
              translateX: [{ value: 80 }, { value: 160 }, { value: 250 }],
              translateY: [{ value: 30 }, { value: 60 }, { value: 60 }],
              duration: 3000,
              offset: 0
          })
          .add({
              targets: '#TLcontrols .circle.el',
              translateX: [{ value: 80 }, { value: 160 }, { value: 250 }],
              translateY: [{ value: 30 }, { value: -30 }, { value: -30 }],
              duration: 3000,
              offset: 0
          })
          .add({
              targets: '#TLcontrols .triangle.el',
              translateX: [{ value: 80 }, { value: 250 }],
              translateY: [{ value: -60 }, { value: -30 }, { value: -30 }],
              duration: 3000,
              offset: 0
          });

        document.querySelector('#TLcontrols .play').onclick = TLcontrols.play;
        document.querySelector('#TLcontrols .pause').onclick = TLcontrols.pause;
        document.querySelector('#TLcontrols .restart').onclick = TLcontrols.restart;

        controlsProgressEl.addEventListener('input', function () {
            TLcontrols.seek(TLcontrols.duration * (controlsProgressEl.value / 100));
        });

        ['input', 'change'].forEach(function (evt) {
            controlsProgressEl.addEventListener(evt, function () {
                TLcontrols.seek(TLcontrols.duration * (controlsProgressEl.value / 100));
            });
        });
    </div>

}

@section scripts {

<script>
    // PLAY / PAUSE（暂停/播放）
    function plPause() {
        var playPause = anime({
            targets: '#playPause .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            direction: 'alternate',
            loop: true,
            autoplay: false
        });

        document.querySelector('#playPause .play').onclick = playPause.play;
        document.querySelector('#playPause .pause').onclick = playPause.pause;
        /*
        autoplay 自动播放
        
        默认 true
        类型 boolean
        */
    }
    plPause();   // 立即执行

    // RESTART（重新开始播放）
    function restartPlay() {
        var restartAnim = anime({
            targets: '#restartAnim .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            direction: 'alternate',
            loop: true
        });

        document.querySelector('#restartAnim .restart').onclick = restartAnim.restart;
    }
    restartPlay();   // 立即执行

    // REVERSE（反转播放）
    function reversePlay() {
        var reverseAnim = anime({
            targets: '#reverseAnim .el',
            translateX: 250,
            duration: 2000,
            delay: function (el, i, l) { return i * 200; }
        });

        document.querySelector('#reverseAnim .reverse').onclick = function () {
            reverseAnim.play();
            reverseAnim.reverse();
        }
    }
    reversePlay();   // 立即执行

    // SEEK（瞬移）
    function seekAni() {
        var seekAnim = anime({
            targets: '#seekAnim .el',
            translateX: 250,
            delay: function (el, i, l) { return i * 100; },
            elasticity: 200,
            autoplay: false
        });

        var seekProgressEl = document.querySelector('#seekAnim .progress');

        seekProgressEl.addEventListener('input', function () {
            seekAnim.seek(seekAnim.duration * (seekProgressEl.value / 100));
        });

        ['input', 'change'].forEach(function (evt) {
            seekProgressEl.addEventListener(evt, function () {
                seekAnim.seek(seekAnim.duration * (seekProgressEl.value / 100));
            });
        });
    }
    seekAni();   // 立即执行

    // 时间轴控制
    function TLctrls() {
        var controlsProgressEl = document.querySelector('#TLcontrols .progress');

        var TLcontrols = anime.timeline({
            direction: 'alternate',
            loop: true,
            easing: 'linear',
            autoplay: false,
            update: function (anim) {
                controlsProgressEl.value = anim.progress;
            }
        });

        TLcontrols
          .add({
              targets: '#TLcontrols .square.el',
              translateX: [{ value: 80 }, { value: 160 }, { value: 250 }],
              translateY: [{ value: 30 }, { value: 60 }, { value: 60 }],
              duration: 3000,
              offset: 0
          })
          .add({
              targets: '#TLcontrols .circle.el',
              translateX: [{ value: 80 }, { value: 160 }, { value: 250 }],
              translateY: [{ value: 30 }, { value: -30 }, { value: -30 }],
              duration: 3000,
              offset: 0
          })
          .add({
              targets: '#TLcontrols .triangle.el',
              translateX: [{ value: 80 }, { value: 250 }],
              translateY: [{ value: -60 }, { value: -30 }, { value: -30 }],
              duration: 3000,
              offset: 0
          });

        document.querySelector('#TLcontrols .play').onclick = TLcontrols.play;
        document.querySelector('#TLcontrols .pause').onclick = TLcontrols.pause;
        document.querySelector('#TLcontrols .restart').onclick = TLcontrols.restart;

        controlsProgressEl.addEventListener('input', function () {
            TLcontrols.seek(TLcontrols.duration * (controlsProgressEl.value / 100));
        });

        ['input', 'change'].forEach(function (evt) {
            controlsProgressEl.addEventListener(evt, function () {
                TLcontrols.seek(TLcontrols.duration * (controlsProgressEl.value / 100));
            });
        });
    }
    TLctrls();   // 立即执行

    

    $(document).ready(function () {
    });
</script>

}